name: fuzz

on:
  workflow_call:
  pull_request:
  push:
    branches: [ master ]

jobs:
  # Run each fuzz target for 60s.
  fuzz:
    strategy:
      matrix:
        fuzz_targets:
          - converge
          - diff
          - tree

    runs-on: ubuntu-latest
    container:
      image: rustlang/rust:nightly
      env:
        CARGO_HOME: "/cargo/"

    steps:
    - name: Ensure node is installed for act checkout
      if: ${{ env.ACT }}
      run: command -v node || (apt update && apt install -y nodejs zstd)

    - name: Checkout source
      uses: actions/checkout@v4

    - name: Cache cargo dir
      id: cargo-dir
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-cargo-nightly
        path: /cargo

    - name: Cache cargo-fuzz
      id: cache-cargo-fuzz
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-cargo-fuzz
        path: /usr/local/cargo/bin/cargo-fuzz

    - name: Install cargo-fuzz
      if: steps.cache-cargo-fuzz.outputs.cache-hit != 'true'
      run: cargo install -f cargo-fuzz --all-features

    - name: Cache corpus
      id: cache-fuzz-corpus
      uses: actions/cache@v4
      with:
        enableCrossOsArchive: true
        key: fuzz-corpus-${{matrix.fuzz_targets}}
        path: fuzz/corpus/${{matrix.fuzz_targets}}

    - name: Run fuzzer
      run: cargo +nightly fuzz run ${{matrix.fuzz_targets}} -- -max_total_time=120
